{"version":3,"file":"dashboard.bundle.js","mappings":"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","sources":["webpack://civil/./src/pages/CommonComponents/ProgressBar/Index.jsx","webpack://civil/./src/pages/CommonComponents/ProgressBar/Style/index.js","webpack://civil/./src/pages/DID/hooks/useAddVcCred.js","webpack://civil/./src/pages/Dashboard/Index.jsx","webpack://civil/./src/pages/Dashboard/Style/index.js","webpack://civil/./src/pages/Dashboard/components/BioForm/Index.jsx","webpack://civil/./src/pages/Dashboard/components/BioForm/Style/Index.js","webpack://civil/./src/pages/Dashboard/components/BioForm/hooks/useOnSubmit.js","webpack://civil/./src/pages/Dashboard/components/Header/Index.jsx","webpack://civil/./src/pages/Dashboard/components/Header/Style/index.js"],"sourcesContent":["import React from 'react'\n\nimport { ProgressBarContainer, ProgressValue } from './Style/index'\n\nconst ProgressBar = ({ value, maxValue }) => (\n  <ProgressBarContainer>\n    <ProgressValue ratio={value / maxValue} />\n  </ProgressBarContainer>\n)\n\nexport default ProgressBar\n","import styled, { keyframes } from 'styled-components'\n\nconst load = (ratio) => keyframes`\n  0% { max-width: 0; }\n  100% { max-width: ${ratio * 100}%; }\n`\n\nexport const ProgressBarContainer = styled('div')` \n  background: white;\n  border: 1px solid black;\n  justify-content: flex-start;\n  border-radius: 1em;\n  align-items: center;\n  position: relative;\n  /* padding: 0 .2em; */\n  display: flex;\n  height: 2vh;\n  width: 10vw;\n\n`\n\nexport const ProgressValue = styled('div')` \n  animation: ${(props) => load(props.ratio)} 1s ease-out normal forwards;\n  animation-delay: 1.5s;\n  border-radius: 1em;\n  background: #47DDA6;\n  height: 1.8vh;\n  width: 10vw;\n  max-width: 0;\n`\n","/* eslint-disable max-len */\nimport { useCallback } from 'react'\nimport {\n  DIDStore, Issuer, DIDDocument, DIDBackend,\n} from '@elastosfoundation/did-js-sdk'\nimport { useSelector } from 'react-redux'\nimport { AssistDIDAdapter } from '../AssistDIDAdapter.ts'\nimport useBindDispatch from '../../hooks/redux/useBindDispatch'\nimport sessionActions from '../../../redux/actions/session'\nimport userActions from '../../../redux/actions/users/index'\nimport { STORE_PATH } from '../constants'\n\nconst STORE_PASS = 'pwd'\n// const password = 'password'\n\nconst addVCToDoc = async (db, issuer, doc, id, value) => {\n  const cb = issuer.issueFor(doc.getSubject())\n  if (!value) return\n  const vc = await cb.id(`#${id}`)\n    .type('SelfProclaimedCredential')\n    .properties({ value })\n    .seal(STORE_PASS)\n  vc.getMetadata().attachStore(doc.getStore())\n  db.addCredential(vc)\n}\n\nexport default () => {\n  const { addDIDSession, upsertDidUser } = useBindDispatch(sessionActions, userActions)\n  const currentUser = useSelector((s) => s.session.currentUser)\n  return useCallback(async (props) => {\n    DIDBackend.initialize(new AssistDIDAdapter('mainnet'))\n    const rootPath = STORE_PATH\n    const store = await DIDStore.open(rootPath)\n    const { doc } = currentUser\n    const issuer = new Issuer(doc)\n    const db = DIDDocument.Builder.newFromDocument(doc).edit()\n    const { value: username } = doc.getCredential('username')?.getSubject().getProperties() || {}\n    // const { value: firstName } = doc.getCredential('firstName')?.getSubject().getProperties() || {}\n    // const { value: lastName } = doc.getCredential('lastName')?.getSubject().getProperties() || {}\n\n    // await addVCToDoc(db, issuer, doc, 'firstName', firstName)\n    // await addVCToDoc(db, issuer, doc, 'lastName', lastName)\n    // await addVCToDoc(db, issuer, doc, 'username', username)\n    await addVCToDoc(db, issuer, doc, 'avatar', props.file)\n\n    const docWithVC = await db.seal(STORE_PASS)\n    await docWithVC.publish(STORE_PASS)\n    // const { value: usernameAfter } = docWithVC.getCredential('username')?.getSubject().getProperties()\n    const { value: avatar } = docWithVC.getCredential('avatar')?.getSubject().getProperties()\n\n    upsertDidUser({\n      userId: docWithVC.getSubject().repr,\n      username: username || docWithVC.getSubject().getMethodSpecificId(),\n      iconSrc: avatar,\n    })\n\n    addDIDSession({ did: docWithVC.getSubject(), doc: docWithVC, username })\n    store.close()\n  }, [])\n}\n","import React, { useEffect, Suspense } from 'react'\nimport { Formik } from 'formik'\nimport { useSelector } from 'react-redux'\nimport { UserProfile } from '@clerk/clerk-react'\n\nimport { Container, FormContainer } from './Style'\nimport sessionActions from '../../redux/actions/session/index'\n\nimport useBindDispatch from '../hooks/redux/useBindDispatch'\nimport Header from './components/Header/Index'\nimport { Line } from '../CommonComponents/Line'\nimport Button from '../CommonComponents/Button/Index'\n\nimport BioForm from './components/BioForm/Index'\nimport BasicInformation from '../AuthFlow/components/BasicInformation/Index'\nimport { INIT_DID_FORM_VALUES } from '../util/form_helpers/init_form_values'\nimport useAddVcCred from '../DID/hooks/useAddVcCred'\n\nconst Dashboard = () => {\n  const { getCurrentUser } = useBindDispatch(sessionActions)\n  const user = useSelector((s) => s.session.currentUser)\n  useEffect(() => {\n    const clerkWrapper = document.getElementsByClassName('cl-main')[0]\n    console.log(clerkWrapper)\n    if (clerkWrapper) clerkWrapper.insertBefore(document.getElementById('bio-dashboard'), null)\n    if (user) getCurrentUser(user?.id)\n  }, [])\n  const addVcCred = useAddVcCred()\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Container>\n        <Header user={user} />\n        <Line />\n        <UserProfile />\n        {/* <Formik\n          initialValues={INIT_DID_FORM_VALUES}\n          onSubmit={(values, params) => addVcCred(values, params)}\n        >\n          {({ isSubmitting, values, setFieldValue }) => (\n            <FormContainer>\n              <BasicInformation setFieldValue={setFieldValue} />\n              <Button\n                width=\"40%\"\n                height=\"2.5vw\"\n                type=\"submit\"\n                backgroundColor=\"var(--m-elastos-theme)\"\n                disabled={isSubmitting}\n                onClick={() => addVcCred(values)}\n              >\n                Update Decentralized Identity\n              </Button>\n            </FormContainer>\n          )}\n        </Formik> */}\n        <Line />\n        <BioForm user={user} />\n      </Container>\n    </Suspense>\n  )\n}\n\nexport default Dashboard\n","import styled from 'styled-components'\n// import { FiUser } from 'react-icons/fi'\n\nexport const FormContainer = styled('div')` \n  width: 70%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 3vw auto;\n\n`\n\nexport const Label = styled('label')` \n  background-image: url('https://civil-dev.s3.us-west-1.amazonaws.com/profile_images/64_1.png');\n  background-size: cover;\n  height: 4em;\n  width: 4em;\n  border-radius: 50%;\n  cursor: pointer;\n`\n\nexport const UploadInput = styled('input')` \n  position: absolute; \n  left: -99999rem;\n`\n\n// export const UploadIcon = styled(FiUser)`\n//   background-color: gray;\n//   border-radius: 50%;\n//   cursor: pointer;\n// `\n\nexport const Container = styled('div')` \n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 4vw;\n\n  .cl-component.cl-user-profile .cl-main {\n    margin: 3em 0 0 1em;\n}\n`\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport useOnSubmit from './hooks/useOnSubmit'\n\nimport {\n  Container, OuterContainer, HeaderContainer,\n  Header, SubHeader, FieldContainer,\n  FieldLabel, Textarea, ButtonContainer,\n} from './Style/Index'\n\nconst BioForm = ({ user }) => {\n  const userData = useSelector((s) => s.users)[user?.id]\n  const [bio, setBio] = useState(userData?.bio)\n  const [experience, setExperience] = useState(userData?.experience)\n\n  useEffect(() => {\n    setBio(userData?.bio)\n    setExperience(userData?.experience)\n  }, [userData])\n\n  useEffect(() => {\n    const clerkWrapper = document.getElementsByClassName('cl-main')[0]\n    if (clerkWrapper) clerkWrapper.insertBefore(document.getElementById('bio-dashboard'), null)\n  }, [])\n\n  const onSubmit = useOnSubmit(bio, experience, setBio, setExperience)\n  return (\n    <OuterContainer id=\"bio-dashboard\">\n      <Container>\n        <HeaderContainer>\n          <Header>Bio Information</Header>\n          <SubHeader>Manage Bio and Experience Information</SubHeader>\n        </HeaderContainer>\n        <form onSubmit={onSubmit}>\n          <FieldContainer>\n            <FieldLabel>\n              Bio\n            </FieldLabel>\n            <Textarea value={bio} onChange={(e) => setBio(e.target.value)} />\n          </FieldContainer>\n          <FieldContainer>\n            <FieldLabel>\n              Experience\n            </FieldLabel>\n            <Textarea value={experience} onChange={(e) => setExperience(e.target.value)} />\n          </FieldContainer>\n          <ButtonContainer>\n            <button type=\"submit\">Save Bio Information</button>\n          </ButtonContainer>\n        </form>\n      </Container>\n    </OuterContainer>\n  )\n}\n\nexport default BioForm\n","import styled from 'styled-components'\n\nexport const OuterContainer = styled('div')` \n  width: 100%;\n  display: flex;\n  justify-content: center;\n\n`\n\nexport const Container = styled('div')`\n  padding: 3em 2em;\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.2);\n  font-family: \"Source Sans Pro\", sans-serif;;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #151515;\n  text-align: left;\n  border-radius: 0.5em;\n  width: 840px;\n`\n\nexport const HeaderContainer = styled('div')`\n  margin-bottom: 1.25em;\n\n`\n\nexport const Header = styled('h1')`\n  display: flex;\n  align-items: center;\n  font-size: 2rem;\n  font-weight: 600;\n  margin: 0;\n  line-height: 1.2;\n\n`\n\nexport const SubHeader = styled('p')`\n  color: #808080;\n  font-size: 1.25rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.5em;\n  margin: 0 0 1rem 0;\n`\n\nexport const FieldContainer = styled('div')`\n  display: flex;\n  width: 100%;\n  padding-bottom: 1.5em;\n`\n\nexport const FieldLabel = styled('div')` \n  display: flex;\n  flex: 0 0 30%;\n  margin-right: 0.5em;\n  padding-top: 1.5em;\n  line-height: 1.25em;\n  font-size: 1em;\n  font-weight: var(--clerk-label-font-weight, 600);\n\n`\n\nexport const Textarea = styled('textarea')`\n  min-height: 4vh;\n  flex: 1;\n  padding-top: 1.5em;\n  padding-bottom: 1.5em;\n  font-size: 1em;\n  line-height: 1.25em;\n\n  transition: color .2s ease-in-out,background-color .2s ease-in-out,border-color .2s ease-in-out,box-shadow .2s ease-in-out;\n  padding: calc(1em - 2px);\n  background: none;\n  border-radius: 0.5em;\n  border: 2px solid #e5e5e5;\n  color: #151515;\n  width: 100%;\n  background-color: #fff;\n\n  :focus {\n    border-color: #87C232;\n    box-shadow: none !important;\n    outline: none !important;\n    outline-offset: none !important;\n  }\n`\n\nexport const ButtonContainer = styled('div')` \n  display: flex;\n  justify-content: flex-end;\n  margin-top: 2em;\n  width: 100%;\n\n  button {\n    transition: color .2s ease-in-out, background-color .2s ease-in-out, border-color .2s ease-in-out, box-shadow .2s ease-in-out;\n    padding: calc(1em - 2px);\n    line-height: 1.25rem;\n    background: #87C232;\n    border-color: #87C232;    \n    border-radius: 0.5em;\n    border: 2px solid #e5e5e5;\n    color: white;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    vertical-align: middle;\n    font-family: inherit;\n    font-weight: 600;\n    font-size: 1rem;\n    margin: 0;\n    padding: 1em 2em;\n    border: 0;\n    outline: 0;\n  }\n\n`\n","import { useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport useBindDispatch from '../../../../hooks/redux/useBindDispatch'\nimport userActions from '../../../../../redux/actions/users'\n\nexport default (bio, experience) => {\n  const currentUser = useSelector((s) => s.session.currentUser)\n  const { updateUserBioInformation } = useBindDispatch(userActions)\n  return useCallback((e) => {\n    e.preventDefault()\n\n    toast.promise(updateUserBioInformation(currentUser?.id, bio || null, experience || null),\n      {\n        pending: 'Saving Bio Infromation...',\n        success: 'Bio Info Succefully Saved!',\n        error: {\n          render({ data: errorData }) {\n            const { response } = errorData\n            const { data: responseData } = response\n            return `${responseData.msg} 🤯 `\n          },\n        },\n      })\n  }, [currentUser, bio, experience])\n}\n","import React from 'react'\nimport ProgressBar from '../../../CommonComponents/ProgressBar/Index'\nimport useOpenModal from '../../../hooks/useOpenModal'\n\nimport { ICON_FORM } from '../../../App/Modal/Index'\nimport { Container, FlexDiv, UserIcon } from './Style'\n\nconst Header = ({ user }) => {\n  const openModal = useOpenModal(ICON_FORM)\n  return (\n    <Container>\n      <h1>{user?.username}</h1>\n      <FlexDiv>\n        <UserIcon src={user?.iconSrc || 'https://civil-dev.s3.us-west-1.amazonaws.com/profile_img_1.png'} onClick={openModal} alt=\"\" />\n        <ProgressBar value={user?.civility} maxValue={20} />\n      </FlexDiv>\n    </Container>\n  )\n}\n\nexport default Header\n","/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components'\n\nexport const Container = styled('header')`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  align-items: center;\n  h1 {\n    color: var(--bg-accent);\n    font-size: 1.4em;\n    font-weight: bold;\n  }\n`\n\nexport const FlexDiv = styled('div')`\n  display: flex;\n  align-items: center;\n\n`\n\nexport const UserIcon = styled('img')`  \n  margin-right: 1vw;\n  height: 2vw;\n  width: 2vw;\n  border-radius: 50%;\n\n`\n"],"names":["React","ProgressBarContainer","ProgressValue","ProgressBar","value","maxValue","styled","keyframes","load","ratio","props","useCallback","DIDStore","Issuer","DIDDocument","DIDBackend","useSelector","AssistDIDAdapter","useBindDispatch","sessionActions","userActions","STORE_PATH","STORE_PASS","addVCToDoc","db","issuer","doc","id","cb","issueFor","getSubject","type","properties","seal","vc","getMetadata","attachStore","getStore","addCredential","addDIDSession","upsertDidUser","currentUser","s","session","initialize","rootPath","open","store","Builder","newFromDocument","edit","getCredential","getProperties","username","file","docWithVC","publish","avatar","userId","repr","getMethodSpecificId","iconSrc","did","close","useEffect","Suspense","Formik","UserProfile","Container","FormContainer","Header","Line","Button","BioForm","BasicInformation","INIT_DID_FORM_VALUES","useAddVcCred","Dashboard","getCurrentUser","user","clerkWrapper","document","getElementsByClassName","console","log","insertBefore","getElementById","addVcCred","Label","UploadInput","useState","useOnSubmit","OuterContainer","HeaderContainer","SubHeader","FieldContainer","FieldLabel","Textarea","ButtonContainer","userData","users","bio","setBio","experience","setExperience","onSubmit","e","target","toast","updateUserBioInformation","preventDefault","promise","pending","success","error","render","errorData","data","response","responseData","msg","useOpenModal","ICON_FORM","FlexDiv","UserIcon","openModal","civility"],"sourceRoot":""}